{
	"info": {
		"_postman_id": "395fc045-dc40-42e3-bb5a-913a35c83a91",
		"name": "Security Audit",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "14565618"
	},
	"item": [
		{
			"name": "Information Gathering",
			"item": [
				{
					"name": "ports-scan-ip",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    // \"ip\":\"185.199.109.153\"\n    // \"ip\":\"10.1.13.235\"\n    \"ip\":\"45.33.32.156\"\n    // \"top_ports\":1500\n    // \"ip\":\"0.58.211.206\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://127.0.0.1:8000/api/v1/information-gathering/ports-scan-ip",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "8000",
							"path": [
								"api",
								"v1",
								"information-gathering",
								"ports-scan-ip"
							]
						}
					},
					"response": []
				},
				{
					"name": "ports-scan-domain",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"domain\":\"selenium.dev\"\n    // \"top_ports\":1500\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://127.0.0.1:8000/api/v1/information-gathering/ports-scan-domain",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "8000",
							"path": [
								"api",
								"v1",
								"information-gathering",
								"ports-scan-domain"
							]
						}
					},
					"response": []
				},
				{
					"name": "dns-service",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    // \"domain\":\"seleniumm.dev\",\n    \"domain\":\"github.com\"\n    // \"domain\":\"facebook.com\"\n    // \"ip\":\"185.199.109.153\"\n    // \"ip\":\"216.58.211.206\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://127.0.0.1:8000/api/v1/information-gathering/dns-service",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "8000",
							"path": [
								"api",
								"v1",
								"information-gathering",
								"dns-service"
							]
						}
					},
					"response": []
				},
				{
					"name": "get_ipv4",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://127.0.0.1:8000/api/v1/information-gathering/dns-service/ipv4?domain=juice-shop.herokuapp.com",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "8000",
							"path": [
								"api",
								"v1",
								"information-gathering",
								"dns-service",
								"ipv4"
							],
							"query": [
								{
									"key": "domain",
									"value": "github.com",
									"disabled": true
								},
								{
									"key": "domain",
									"value": "juice-shop.herokuapp.com"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "get_ipv6",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://127.0.0.1:8000/api/v1/information-gathering/dns-service/ipv6?domain=facebook.com",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "8000",
							"path": [
								"api",
								"v1",
								"information-gathering",
								"dns-service",
								"ipv6"
							],
							"query": [
								{
									"key": "domain",
									"value": "facebook.com"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "get_mail_server",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://127.0.0.1:8000/api/v1/information-gathering/dns-service/mail-server?domain=selenium.dev",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "8000",
							"path": [
								"api",
								"v1",
								"information-gathering",
								"dns-service",
								"mail-server"
							],
							"query": [
								{
									"key": "domain",
									"value": "selenium.dev"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "get_port_scanner_by_id",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://127.0.0.1:8000/api/v1/information-gathering/scanner/9",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "8000",
							"path": [
								"api",
								"v1",
								"information-gathering",
								"scanner",
								"9"
							]
						}
					},
					"response": []
				},
				{
					"name": "get_all_port_scanner",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://127.0.0.1:8000/api/v1/information-gathering/scanner",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "8000",
							"path": [
								"api",
								"v1",
								"information-gathering",
								"scanner"
							]
						}
					},
					"response": []
				},
				{
					"name": "get-report",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://127.0.0.1:8001/api/v1/information-gathering/get-report/4",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "8001",
							"path": [
								"api",
								"v1",
								"information-gathering",
								"get-report",
								"4"
							]
						}
					},
					"response": []
				},
				{
					"name": "robots.txt",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"url\":\"http://localhost:3000/\" \n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://127.0.0.1:8000/api/v1/information-gathering/extract-robots-txt/",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "8000",
							"path": [
								"api",
								"v1",
								"information-gathering",
								"extract-robots-txt",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "get_technolgies",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"target\":\"http://juice-shop.herokuapp.com\" \n// \"target\":\"https://www.selenium.dev/\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://127.0.0.1:8000/api/v1/information-gathering/get-technologies/",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "8000",
							"path": [
								"api",
								"v1",
								"information-gathering",
								"get-technologies",
								""
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Enumeration",
			"item": [
				{
					"name": "verify_username_and_password_strength",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"credentials\": [\n    { \"username\": \"userà°1\", \"password\": \"AA**$$passwor$$2d1\" },\n    { \"username\": \"user2\", \"password\": \"AAsword2\" },\n    { \"username\": \"user3\", \"password\": \"password3\" },\n    { \"username\": \"user4\", \"password\": \"password4\" },\n    { \"username\": \"user5\", \"password\": \"password5\" }\n  ]\n}\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://127.0.0.1:8000/api/v1/enumeration/username-password-strength/",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "8000",
							"path": [
								"api",
								"v1",
								"enumeration",
								"username-password-strength",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "check_role_authorization",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "  <authorization-matrix>\n\n      <!-- Describe the possible logical roles used in the system, is used here to\n      provide a list+explanation\n      of the different roles (authorization level) -->\n      <roles>\n          <role name=\"ANONYMOUS\"\n          description=\"Indicate that no authorization is needed\"/>\n          <role name=\"BASIC\"\n          description=\"Role affecting a standard user (lowest access right just above anonymous)\"/>\n          <role name=\"ADMIN\"\n          description=\"Role affecting an administrator user (highest access right)\"/>\n      </roles>\n\n      <!-- List and describe the available services exposed by the system and the associated\n      logical role(s) that can call them -->\n      <services>\n          <service name=\"ReadSingleMessage\" uri=\"/{messageId}\" http-method=\"GET\"\n          http-response-code-for-access-allowed=\"200\" http-response-code-for-access-denied=\"403\">\n              <role name=\"ANONYMOUS\"/>\n              <role name=\"BASIC\"/>\n              <role name=\"ADMIN\"/>\n          </service>\n          <service name=\"ReadAllMessages\" uri=\"/\" http-method=\"GET\"\n          http-response-code-for-access-allowed=\"200\" http-response-code-for-access-denied=\"403\">\n              <role name=\"ANONYMOUS\"/>\n              <role name=\"BASIC\"/>\n              <role name=\"ADMIN\"/>\n          </service>\n          <service name=\"CreateMessage\" uri=\"/\" http-method=\"PUT\"\n          http-response-code-for-access-allowed=\"200\" http-response-code-for-access-denied=\"403\">\n              <role name=\"BASIC\"/>\n              <role name=\"ADMIN\"/>\n          </service>\n          <service name=\"DeleteMessage\" uri=\"/{messageId}\" http-method=\"DELETE\"\n          http-response-code-for-access-allowed=\"200\" http-response-code-for-access-denied=\"403\">\n              <role name=\"ADMIN\"/>\n          </service>\n      </services>\n\n      <!-- Provide a test payload for each service if needed -->\n      <services-testing>\n          <service name=\"ReadSingleMessage\">\n              <payload/>\n          </service>\n          <service name=\"ReadAllMessages\">\n              <payload/>\n          </service>\n          <service name=\"CreateMessage\">\n              <payload content-type=\"application/json\">\n                  {\"content\":\"test\"}\n              </payload>\n          </service>\n          <service name=\"DeleteMessage\">\n              <payload/>\n          </service>\n      </services-testing>\n\n  </authorization-matrix>",
							"options": {
								"raw": {
									"language": "xml"
								}
							}
						},
						"url": {
							"raw": "http://127.0.0.1:8000/api/v1/enumeration/check-role-authorization/",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "8000",
							"path": [
								"api",
								"v1",
								"enumeration",
								"check-role-authorization",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "owasp_spider",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "  <authorization-matrix>\n\n      <!-- Describe the possible logical roles used in the system, is used here to\n      provide a list+explanation\n      of the different roles (authorization level) -->\n      <roles>\n          <role name=\"ANONYMOUS\"\n          description=\"Indicate that no authorization is needed\"/>\n          <role name=\"BASIC\"\n          description=\"Role affecting a standard user (lowest access right just above anonymous)\"/>\n          <role name=\"ADMIN\"\n          description=\"Role affecting an administrator user (highest access right)\"/>\n      </roles>\n\n      <!-- List and describe the available services exposed by the system and the associated\n      logical role(s) that can call them -->\n      <services>\n          <service name=\"ReadSingleMessage\" uri=\"/{messageId}\" http-method=\"GET\"\n          http-response-code-for-access-allowed=\"200\" http-response-code-for-access-denied=\"403\">\n              <role name=\"ANONYMOUS\"/>\n              <role name=\"BASIC\"/>\n              <role name=\"ADMIN\"/>\n          </service>\n          <service name=\"ReadAllMessages\" uri=\"/\" http-method=\"GET\"\n          http-response-code-for-access-allowed=\"200\" http-response-code-for-access-denied=\"403\">\n              <role name=\"ANONYMOUS\"/>\n              <role name=\"BASIC\"/>\n              <role name=\"ADMIN\"/>\n          </service>\n          <service name=\"CreateMessage\" uri=\"/\" http-method=\"PUT\"\n          http-response-code-for-access-allowed=\"200\" http-response-code-for-access-denied=\"403\">\n              <role name=\"BASIC\"/>\n              <role name=\"ADMIN\"/>\n          </service>\n          <service name=\"DeleteMessage\" uri=\"/{messageId}\" http-method=\"DELETE\"\n          http-response-code-for-access-allowed=\"200\" http-response-code-for-access-denied=\"403\">\n              <role name=\"ADMIN\"/>\n          </service>\n      </services>\n\n      <!-- Provide a test payload for each service if needed -->\n      <services-testing>\n          <service name=\"ReadSingleMessage\">\n              <payload/>\n          </service>\n          <service name=\"ReadAllMessages\">\n              <payload/>\n          </service>\n          <service name=\"CreateMessage\">\n              <payload content-type=\"application/json\">\n                  {\"content\":\"test\"}\n              </payload>\n          </service>\n          <service name=\"DeleteMessage\">\n              <payload/>\n          </service>\n      </services-testing>\n\n  </authorization-matrix>",
							"options": {
								"raw": {
									"language": "xml"
								}
							}
						},
						"url": {
							"raw": "http://127.0.0.1:8000/api/v1/enumeration/owasp-spider?target=https://juice-shop.herokuapp.com",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "8000",
							"path": [
								"api",
								"v1",
								"enumeration",
								"owasp-spider"
							],
							"query": [
								{
									"key": "target",
									"value": "https://juice-shop.herokuapp.com"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "owasp_ascan",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "  <authorization-matrix>\n\n      <!-- Describe the possible logical roles used in the system, is used here to\n      provide a list+explanation\n      of the different roles (authorization level) -->\n      <roles>\n          <role name=\"ANONYMOUS\"\n          description=\"Indicate that no authorization is needed\"/>\n          <role name=\"BASIC\"\n          description=\"Role affecting a standard user (lowest access right just above anonymous)\"/>\n          <role name=\"ADMIN\"\n          description=\"Role affecting an administrator user (highest access right)\"/>\n      </roles>\n\n      <!-- List and describe the available services exposed by the system and the associated\n      logical role(s) that can call them -->\n      <services>\n          <service name=\"ReadSingleMessage\" uri=\"/{messageId}\" http-method=\"GET\"\n          http-response-code-for-access-allowed=\"200\" http-response-code-for-access-denied=\"403\">\n              <role name=\"ANONYMOUS\"/>\n              <role name=\"BASIC\"/>\n              <role name=\"ADMIN\"/>\n          </service>\n          <service name=\"ReadAllMessages\" uri=\"/\" http-method=\"GET\"\n          http-response-code-for-access-allowed=\"200\" http-response-code-for-access-denied=\"403\">\n              <role name=\"ANONYMOUS\"/>\n              <role name=\"BASIC\"/>\n              <role name=\"ADMIN\"/>\n          </service>\n          <service name=\"CreateMessage\" uri=\"/\" http-method=\"PUT\"\n          http-response-code-for-access-allowed=\"200\" http-response-code-for-access-denied=\"403\">\n              <role name=\"BASIC\"/>\n              <role name=\"ADMIN\"/>\n          </service>\n          <service name=\"DeleteMessage\" uri=\"/{messageId}\" http-method=\"DELETE\"\n          http-response-code-for-access-allowed=\"200\" http-response-code-for-access-denied=\"403\">\n              <role name=\"ADMIN\"/>\n          </service>\n      </services>\n\n      <!-- Provide a test payload for each service if needed -->\n      <services-testing>\n          <service name=\"ReadSingleMessage\">\n              <payload/>\n          </service>\n          <service name=\"ReadAllMessages\">\n              <payload/>\n          </service>\n          <service name=\"CreateMessage\">\n              <payload content-type=\"application/json\">\n                  {\"content\":\"test\"}\n              </payload>\n          </service>\n          <service name=\"DeleteMessage\">\n              <payload/>\n          </service>\n      </services-testing>\n\n  </authorization-matrix>",
							"options": {
								"raw": {
									"language": "xml"
								}
							}
						},
						"url": {
							"raw": "http://127.0.0.1:8000/api/v1/enumeration/owasp-ascan?target=https://juice-shop.herokuapp.com",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "8000",
							"path": [
								"api",
								"v1",
								"enumeration",
								"owasp-ascan"
							],
							"query": [
								{
									"key": "target",
									"value": "https://juice-shop.herokuapp.com"
								},
								{
									"key": "target",
									"value": "http://altoromutual.com",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "get_zap_report",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://127.0.0.1:8000/api/v1/enumeration/owasp-report/19",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "8000",
							"path": [
								"api",
								"v1",
								"enumeration",
								"owasp-report",
								"19"
							]
						}
					},
					"response": []
				},
				{
					"name": "stop_ascan",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "apikey",
								"value": "mohamed",
								"type": "text",
								"disabled": true
							}
						],
						"url": {
							"raw": "http://127.0.0.1:8091/JSON/ascan/action/stopAllScans/?apikey=mohamed",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "8091",
							"path": [
								"JSON",
								"ascan",
								"action",
								"stopAllScans",
								""
							],
							"query": [
								{
									"key": "apikey",
									"value": "mohamed"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "stop_spider",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://127.0.0.1:8091/JSON/spider/action/stopAllScans/?apikey=mohamed",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "8091",
							"path": [
								"JSON",
								"spider",
								"action",
								"stopAllScans",
								""
							],
							"query": [
								{
									"key": "apikey",
									"value": "mohamed"
								}
							]
						}
					},
					"response": []
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "id",
			"value": "1"
		},
		{
			"key": "base_url",
			"value": "https://postman-rest-api-learner.glitch.me/"
		}
	]
}